name: Integration Tests (Neo4j)

on:
  push:
    branches: [ main, 'feature/**' ]
  pull_request:
    branches: [ main ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    services:
      neo4j:
        image: neo4j:5.15.0
        ports:
          - 7474:7474
          - 7687:7687
        env:
          NEO4J_AUTH: "neo4j/${{ secrets.NEO4J_PASSWORD }}"
        # Entferne container-internen Health-Check (curl häufig nicht verfügbar im Image)
        # Runner wartet später aktiv per curl auf den HTTP-Port

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          python -m pip install pytest neo4j

      - name: Wait for Neo4j HTTP endpoint
        run: |
          for i in $(seq 1 30); do
            if curl -sS -I -u neo4j:${{ secrets.NEO4J_PASSWORD }} http://localhost:7474 >/dev/null 2>&1; then
              echo "Neo4j HTTP available"
              break
            else
              echo "Waiting for Neo4j... ($i)"
              sleep 2
            fi
          done

      - name: Run integration tests (Neo4j)
        env:
          NEO4J_URI: bolt://localhost:7687
          NEO4J_USER: neo4j
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
        run: |
          python -m pytest -q
