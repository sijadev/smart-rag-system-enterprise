<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Claude-like Chat Interface</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: #f7f7f8;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .app-container {
            display: flex;
            height: 100vh;
            max-width: 1400px;
            margin: 0 auto;
            width: 100%;
        }

        /* Header */
        .header {
            background: white;
            border-bottom: 1px solid #e5e5e5;
            padding: 0 20px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .logo {
            font-size: 20px;
            font-weight: 600;
            color: #2d3748;
        }

        .header-actions {
            display: flex;
            gap: 12px;
        }

        .btn {
            padding: 8px 16px;
            border: 1px solid #d1d5db;
            background: white;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s;
            font-size: 14px;
            text-decoration: none;
            color: #374151;
        }

        .btn:hover {
            background: #f9fafb;
            border-color: #9ca3af;
        }

        .btn-primary {
            background: #2563eb;
            color: white;
            border-color: #2563eb;
        }

        .btn-primary:hover {
            background: #1d4ed8;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: white;
            border-right: 1px solid #e5e5e5;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        .sidebar-header {
            padding: 20px;
            border-bottom: 1px solid #e5e5e5;
        }

        .new-chat-btn {
            width: 100%;
            padding: 12px;
            background: #2563eb;
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: background 0.2s;
        }

        .new-chat-btn:hover {
            background: #1d4ed8;
        }

        .chat-history {
            flex: 1;
            overflow-y: auto;
            padding: 0 20px;
        }

        .chat-item {
            padding: 12px;
            margin: 4px 0;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.2s;
            border: 1px solid transparent;
        }

        .chat-item:hover {
            background: #f3f4f6;
        }

        .chat-item.active {
            background: #eff6ff;
            border-color: #3b82f6;
        }

        .chat-title {
            font-size: 14px;
            color: #374151;
            margin-bottom: 4px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .chat-date {
            font-size: 12px;
            color: #9ca3af;
        }

        /* Main Chat Area */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            height: 100vh;
        }

        .chat-container {
            flex: 1;
            overflow-y: auto;
            padding: 20px;
        }

        .welcome-screen {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            text-align: center;
        }

        .welcome-title {
            font-size: 32px;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 16px;
        }

        .welcome-subtitle {
            font-size: 18px;
            color: #6b7280;
            margin-bottom: 32px;
        }

        .example-prompts {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 16px;
            max-width: 800px;
            width: 100%;
        }

        .example-prompt {
            background: white;
            padding: 20px;
            border-radius: 12px;
            border: 1px solid #e5e5e5;
            cursor: pointer;
            transition: all 0.2s;
        }

        .example-prompt:hover {
            border-color: #3b82f6;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }

        .example-prompt h3 {
            font-size: 16px;
            font-weight: 600;
            color: #1f2937;
            margin-bottom: 8px;
        }

        .example-prompt p {
            font-size: 14px;
            color: #6b7280;
        }

        /* Messages */
        .message {
            margin-bottom: 24px;
            display: flex;
            gap: 12px;
        }

        .message-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 14px;
            flex-shrink: 0;
        }

        .user-avatar {
            background: #3b82f6;
            color: white;
        }

        .ai-avatar {
            background: #f3f4f6;
            color: #374151;
        }

        .message-content {
            flex: 1;
            background: white;
            padding: 16px;
            border-radius: 12px;
            border: 1px solid #e5e5e5;
        }

        .message-text {
            line-height: 1.6;
            color: #374151;
        }

        .message-time {
            font-size: 12px;
            color: #9ca3af;
            margin-top: 8px;
        }

        /* Input Area */
        .input-container {
            background: white;
            border-top: 1px solid #e5e5e5;
            padding: 20px;
        }

        .input-wrapper {
            position: relative;
            max-width: 800px;
            margin: 0 auto;
        }

        .message-input {
            width: 100%;
            padding: 16px 60px 16px 20px;
            border: 1px solid #d1d5db;
            border-radius: 12px;
            resize: none;
            font-size: 16px;
            line-height: 1.5;
            font-family: inherit;
            outline: none;
            transition: border-color 0.2s;
            min-height: 56px;
            max-height: 200px;
        }

        .message-input:focus {
            border-color: #3b82f6;
        }

        .send-button {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            width: 40px;
            height: 40px;
            background: #3b82f6;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background 0.2s;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .send-button:hover:not(:disabled) {
            background: #1d4ed8;
        }

        .send-button:disabled {
            background: #9ca3af;
            cursor: not-allowed;
        }

        .typing-indicator {
            display: none;
            align-items: center;
            gap: 8px;
            color: #8b949e;
            font-style: italic;
            padding: 16px;
        }

        .typing-dots {
            display: flex;
            gap: 4px;
        }

        .typing-dot {
            width: 6px;
            height: 6px;
            background: #8b949e;
            border-radius: 50%;
            animation: typing 1.4s infinite;
        }

        .typing-dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-dot:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes typing {
            0%, 60%, 100% {
                transform: scale(1);
                opacity: 0.5;
            }
            30% {
                transform: scale(1.2);
                opacity: 1;
            }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .sidebar {
                position: fixed;
                left: -280px;
                top: 0;
                z-index: 200;
                transition: left 0.3s;
            }

            .sidebar.open {
                left: 0;
            }

            .main-content {
                width: 100%;
            }

            .example-prompts {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="app-container">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <button class="new-chat-btn" onclick="createNewChat()">
                    + Neuer Chat
                </button>
            </div>
            <div class="chat-history" id="chatHistory">
                <!-- Chat-Geschichte wird hier dynamisch geladen -->
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <!-- Header -->
            <div class="header">
                <div class="logo">Claude-like Chat</div>
                <div class="header-actions">
                    <button class="btn" onclick="toggleSidebar()">☰</button>
                    <a href="/new" class="btn btn-primary">Neuer Chat</a>
                </div>
            </div>

            <!-- Chat Container -->
            <div class="chat-container" id="chatContainer">
                <div class="welcome-screen" id="welcomeScreen">
                    <h1 class="welcome-title">Wie kann ich Ihnen helfen?</h1>
                    <p class="welcome-subtitle">Stellen Sie mir eine Frage oder wählen Sie einen der Vorschläge unten</p>
                    <div class="example-prompts">
                        <div class="example-prompt" onclick="sendExample('Schreibe mir eine E-Mail an meinen Kunden')">
                            <h3>✍️ Text schreiben</h3>
                            <p>Schreibe mir eine E-Mail an meinen Kunden</p>
                        </div>
                        <div class="example-prompt" onclick="sendExample('Erkläre mir wie maschinelles Lernen funktioniert')">
                            <h3>🧠 Erklären</h3>
                            <p>Erkläre mir wie maschinelles Lernen funktioniert</p>
                        </div>
                        <div class="example-prompt" onclick="sendExample('Hilf mir bei der Problemlösung für mein Python-Projekt')">
                            <h3>💻 Programmierung</h3>
                            <p>Hilf mir bei der Problemlösung für mein Python-Projekt</p>
                        </div>
                        <div class="example-prompt" onclick="sendExample('Erstelle mir einen Businessplan für mein Startup')">
                            <h3>📊 Analyse</h3>
                            <p>Erstelle mir einen Businessplan für mein Startup</p>
                        </div>
                    </div>
                </div>
                <div id="messages"></div>
                <div class="typing-indicator" id="typingIndicator">
                    <span>Claude tippt</span>
                    <div class="typing-dots">
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                        <div class="typing-dot"></div>
                    </div>
                </div>
            </div>

            <!-- Input Container -->
            <div class="input-container">
                <div class="input-wrapper">
                    <textarea
                        class="message-input"
                        id="messageInput"
                        placeholder="Schreiben Sie eine Nachricht..."
                        rows="1"></textarea>
                    <button class="send-button" id="sendButton" onclick="sendMessage()">
                        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="m22 2-7 20-4-9-9-4zm0 0-10 10"/>
                        </svg>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // WebSocket Verbindung
        let ws = null;
        let currentSessionId = '{{ session_id if session_id else "" }}';

        // DOM Elemente
        const messageInput = document.getElementById('messageInput');
        const sendButton = document.getElementById('sendButton');
        const messagesContainer = document.getElementById('messages');
        const welcomeScreen = document.getElementById('welcomeScreen');
        const typingIndicator = document.getElementById('typingIndicator');
        const chatHistory = document.getElementById('chatHistory');

        // Event Listeners
        messageInput.addEventListener('input', autoResize);
        messageInput.addEventListener('keydown', handleKeyDown);

        // Initialisierung
        document.addEventListener('DOMContentLoaded', function() {
            loadChatHistory();
            if (currentSessionId) {
                connectWebSocket(currentSessionId);
                hideWelcomeScreen();
            }
        });

        function autoResize() {
            messageInput.style.height = 'auto';
            messageInput.style.height = messageInput.scrollHeight + 'px';
        }

        function handleKeyDown(event) {
            if (event.key === 'Enter' && !event.shiftKey) {
                event.preventDefault();
                sendMessage();
            }
        }

        function connectWebSocket(sessionId) {
            if (ws) {
                ws.close();
            }

            const protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
            ws = new WebSocket(`${protocol}//${window.location.host}/ws/${sessionId}`);

            ws.onopen = function(event) {
                console.log('WebSocket verbunden');
                sendButton.disabled = false;
            };

            ws.onmessage = function(event) {
                const data = JSON.parse(event.data);
                if (data.type === 'user_message') {
                    displayMessage(data.message, 'user');
                } else if (data.type === 'ai_message') {
                    hideTypingIndicator();
                    displayMessage(data.message, 'ai');
                }
            };

            ws.onclose = function(event) {
                console.log('WebSocket getrennt');
                sendButton.disabled = true;
            };

            ws.onerror = function(error) {
                console.error('WebSocket Fehler:', error);
                sendButton.disabled = true;
            };
        }

        function sendMessage() {
            const content = messageInput.value.trim();
            if (!content || !ws) return;

            if (!currentSessionId) {
                createNewChatAndSend(content);
                return;
            }

            // Nachricht senden
            ws.send(JSON.stringify({
                content: content,
                timestamp: new Date().toISOString()
            }));

            // Input leeren und Typing-Indikator anzeigen
            messageInput.value = '';
            messageInput.style.height = 'auto';
            showTypingIndicator();

            hideWelcomeScreen();
        }

        function sendExample(text) {
            messageInput.value = text;
            sendMessage();
        }

        function displayMessage(message, role) {
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message';

            const avatarDiv = document.createElement('div');
            avatarDiv.className = `message-avatar ${role}-avatar`;
            avatarDiv.textContent = role === 'user' ? 'Du' : 'AI';

            const contentDiv = document.createElement('div');
            contentDiv.className = 'message-content';

            const textDiv = document.createElement('div');
            textDiv.className = 'message-text';
            textDiv.textContent = message.content;

            const timeDiv = document.createElement('div');
            timeDiv.className = 'message-time';
            timeDiv.textContent = new Date(message.timestamp).toLocaleString('de-DE');

            contentDiv.appendChild(textDiv);
            contentDiv.appendChild(timeDiv);
            messageDiv.appendChild(avatarDiv);
            messageDiv.appendChild(contentDiv);

            messagesContainer.appendChild(messageDiv);
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function showTypingIndicator() {
            typingIndicator.style.display = 'flex';
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }

        function hideTypingIndicator() {
            typingIndicator.style.display = 'none';
        }

        function hideWelcomeScreen() {
            welcomeScreen.style.display = 'none';
        }

        function createNewChat() {
            window.location.href = '/new';
        }

        async function createNewChatAndSend(content) {
            try {
                const response = await fetch('/new');
                const html = await response.text();
                const parser = new DOMParser();
                const doc = parser.parseFromString(html, 'text/html');
                const newSessionId = doc.documentElement.innerHTML.match(/session_id['"]\s*:\s*['"]([^'"]+)['"]/)?.[1];

                if (newSessionId) {
                    currentSessionId = newSessionId;
                    connectWebSocket(currentSessionId);

                    // Warten bis WebSocket verbunden ist
                    setTimeout(() => {
                        ws.send(JSON.stringify({
                            content: content,
                            timestamp: new Date().toISOString()
                        }));
                        showTypingIndicator();
                        hideWelcomeScreen();
                    }, 500);
                }
            } catch (error) {
                console.error('Fehler beim Erstellen eines neuen Chats:', error);
            }
        }

        async function loadChatHistory() {
            try {
                const response = await fetch('/api/sessions');
                const data = await response.json();

                chatHistory.innerHTML = '';
                data.sessions.forEach(session => {
                    const chatItem = document.createElement('div');
                    chatItem.className = 'chat-item';
                    if (session.id === currentSessionId) {
                        chatItem.classList.add('active');
                    }

                    chatItem.innerHTML = `
                        <div class="chat-title">${session.title}</div>
                        <div class="chat-date">${new Date(session.created_at).toLocaleDateString('de-DE')}</div>
                    `;

                    chatItem.onclick = () => loadSession(session.id);
                    chatHistory.appendChild(chatItem);
                });
            } catch (error) {
                console.error('Fehler beim Laden der Chat-Geschichte:', error);
            }
        }

        function loadSession(sessionId) {
            window.location.href = `/?session=${sessionId}`;
        }

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }

        // Mobile responsive handling
        if (window.innerWidth <= 768) {
            document.addEventListener('click', function(event) {
                const sidebar = document.getElementById('sidebar');
                if (!sidebar.contains(event.target) && !event.target.closest('.btn')) {
                    sidebar.classList.remove('open');
                }
            });
        }
    </script>
</body>
</html>